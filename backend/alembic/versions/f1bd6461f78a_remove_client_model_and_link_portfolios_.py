"""Remove client model and link portfolios to users

Revision ID: f1bd6461f78a
Revises:
Create Date: 2025-07-07 18:28:38.129289

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "f1bd6461f78a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "market_data",
        sa.Column("symbol", sa.String(length=20), nullable=False),
        sa.Column("data_date", sa.Date(), nullable=False),
        sa.Column("price", sa.Numeric(precision=15, scale=4), nullable=False),
        sa.Column("change_amount", sa.Numeric(precision=15, scale=4), nullable=True),
        sa.Column("change_percent", sa.Numeric(precision=8, scale=4), nullable=True),
        sa.Column("volume", sa.BigInteger(), nullable=True),
        sa.Column("market_cap", sa.BigInteger(), nullable=True),
        sa.Column("pe_ratio", sa.Numeric(precision=8, scale=2), nullable=True),
        sa.Column("dividend_yield", sa.Numeric(precision=5, scale=4), nullable=True),
        sa.Column("beta", sa.Numeric(precision=6, scale=4), nullable=True),
        sa.Column(
            "fifty_two_week_high", sa.Numeric(precision=15, scale=4), nullable=True
        ),
        sa.Column(
            "fifty_two_week_low", sa.Numeric(precision=15, scale=4), nullable=True
        ),
        sa.Column("last_updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("symbol", "data_date"),
    )
    op.create_index(
        op.f("ix_market_data_symbol"), "market_data", ["symbol"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("date_of_birth", sa.String(length=10), nullable=True),
        sa.Column("annual_income", sa.String(length=20), nullable=True),
        sa.Column("risk_tolerance", sa.String(length=20), nullable=True),
        sa.Column("investment_experience", sa.String(length=20), nullable=True),
        sa.Column("financial_goals", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "financial_goals",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "goal_type",
            sa.Enum(
                "RETIREMENT",
                "EDUCATION",
                "EMERGENCY_FUND",
                "MAJOR_PURCHASE",
                "VACATION",
                "DEBT_PAYOFF",
                "OTHER",
                name="goaltype",
            ),
            nullable=False,
        ),
        sa.Column("target_amount", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("current_amount", sa.Numeric(precision=15, scale=2), nullable=True),
        sa.Column("target_date", sa.Date(), nullable=True),
        sa.Column("priority_level", sa.Integer(), nullable=True),
        sa.Column(
            "monthly_contribution", sa.Numeric(precision=10, scale=2), nullable=True
        ),
        sa.Column(
            "expected_return_rate", sa.Numeric(precision=5, scale=4), nullable=True
        ),
        sa.Column("inflation_rate", sa.Numeric(precision=5, scale=4), nullable=True),
        sa.Column("is_achieved", sa.Boolean(), nullable=True),
        sa.Column("achievement_date", sa.Date(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_financial_goals_id"), "financial_goals", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_financial_goals_user_id"), "financial_goals", ["user_id"], unique=False
    )
    op.create_table(
        "portfolios",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "portfolio_type",
            sa.Enum(
                "INVESTMENT",
                "RETIREMENT",
                "EDUCATION",
                "TAXABLE",
                "TAX_DEFERRED",
                name="portfoliotype",
            ),
            nullable=True,
        ),
        sa.Column("target_allocation", sa.JSON(), nullable=True),
        sa.Column(
            "risk_level",
            sa.Enum("CONSERVATIVE", "MODERATE", "AGGRESSIVE", name="risklevel"),
            nullable=True,
        ),
        sa.Column("benchmark_symbol", sa.String(length=10), nullable=True),
        sa.Column(
            "rebalance_frequency",
            sa.Enum(
                "MONTHLY",
                "QUARTERLY",
                "SEMIANNUAL",
                "ANNUAL",
                name="rebalancefrequency",
            ),
            nullable=True,
        ),
        sa.Column(
            "rebalance_threshold", sa.Numeric(precision=5, scale=2), nullable=True
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_portfolios_id"), "portfolios", ["id"], unique=False)
    op.create_index(
        op.f("ix_portfolios_user_id"), "portfolios", ["user_id"], unique=False
    )
    op.create_table(
        "goal_contributions",
        sa.Column("goal_id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("contribution_date", sa.Date(), nullable=False),
        sa.Column(
            "contribution_type",
            sa.Enum("MANUAL", "AUTOMATIC", "BONUS", "GIFT", name="contributiontype"),
            nullable=True,
        ),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["goal_id"],
            ["financial_goals.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_goal_contributions_goal_id"),
        "goal_contributions",
        ["goal_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_goal_contributions_id"), "goal_contributions", ["id"], unique=False
    )
    op.create_table(
        "holdings",
        sa.Column("portfolio_id", sa.Integer(), nullable=False),
        sa.Column("symbol", sa.String(length=20), nullable=False),
        sa.Column("security_name", sa.String(length=255), nullable=True),
        sa.Column(
            "security_type",
            sa.Enum(
                "STOCK",
                "BOND",
                "ETF",
                "MUTUAL_FUND",
                "CASH",
                "CRYPTO",
                "OTHER",
                name="securitytype",
            ),
            nullable=False,
        ),
        sa.Column("quantity", sa.Numeric(precision=15, scale=6), nullable=False),
        sa.Column("cost_basis", sa.Numeric(precision=15, scale=4), nullable=False),
        sa.Column("purchase_date", sa.Date(), nullable=False),
        sa.Column("current_price", sa.Numeric(precision=15, scale=4), nullable=True),
        sa.Column("last_price_update", sa.DateTime(), nullable=True),
        sa.Column("sector", sa.String(length=100), nullable=True),
        sa.Column(
            "asset_class",
            sa.Enum(
                "EQUITY",
                "FIXED_INCOME",
                "CASH",
                "ALTERNATIVE",
                "COMMODITY",
                name="assetclass",
            ),
            nullable=True,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["portfolio_id"],
            ["portfolios.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "portfolio_id", "symbol", "purchase_date", name="_portfolio_symbol_date_uc"
        ),
    )
    op.create_index(op.f("ix_holdings_id"), "holdings", ["id"], unique=False)
    op.create_index(
        op.f("ix_holdings_portfolio_id"), "holdings", ["portfolio_id"], unique=False
    )
    op.create_index(op.f("ix_holdings_symbol"), "holdings", ["symbol"], unique=False)
    op.create_table(
        "reports",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("portfolio_id", sa.Integer(), nullable=True),
        sa.Column(
            "report_type",
            sa.Enum(
                "PORTFOLIO_SUMMARY",
                "PERFORMANCE",
                "ALLOCATION",
                "GOAL_PROGRESS",
                "CUSTOM",
                name="reporttype",
            ),
            nullable=False,
        ),
        sa.Column("report_name", sa.String(length=255), nullable=False),
        sa.Column("parameters", sa.JSON(), nullable=True),
        sa.Column("file_path", sa.String(length=500), nullable=True),
        sa.Column(
            "file_format",
            sa.Enum("PDF", "CSV", "XLSX", name="fileformat"),
            nullable=True,
        ),
        sa.Column("generated_at", sa.DateTime(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=True),
        sa.Column("is_scheduled", sa.Boolean(), nullable=True),
        sa.Column(
            "schedule_frequency",
            sa.Enum(
                "DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", name="schedulefrequency"
            ),
            nullable=True,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["portfolio_id"],
            ["portfolios.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_reports_id"), "reports", ["id"], unique=False)
    op.create_index(
        op.f("ix_reports_portfolio_id"), "reports", ["portfolio_id"], unique=False
    )
    op.create_index(op.f("ix_reports_user_id"), "reports", ["user_id"], unique=False)
    op.create_table(
        "transactions",
        sa.Column("portfolio_id", sa.Integer(), nullable=False),
        sa.Column("holding_id", sa.Integer(), nullable=True),
        sa.Column(
            "transaction_type",
            sa.Enum(
                "BUY",
                "SELL",
                "DIVIDEND",
                "INTEREST",
                "FEE",
                "DEPOSIT",
                "WITHDRAWAL",
                name="transactiontype",
            ),
            nullable=False,
        ),
        sa.Column("symbol", sa.String(length=20), nullable=True),
        sa.Column("quantity", sa.Numeric(precision=15, scale=6), nullable=True),
        sa.Column("price", sa.Numeric(precision=15, scale=4), nullable=True),
        sa.Column("total_amount", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("fee", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("transaction_date", sa.Date(), nullable=False),
        sa.Column("settlement_date", sa.Date(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "tax_lot_method",
            sa.Enum("FIFO", "LIFO", "SPECIFIC_ID", "AVERAGE_COST", name="taxlotmethod"),
            nullable=True,
        ),
        sa.Column("is_tax_exempt", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["holding_id"],
            ["holdings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["portfolio_id"],
            ["portfolios.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_transactions_id"), "transactions", ["id"], unique=False)
    op.create_index(
        op.f("ix_transactions_portfolio_id"),
        "transactions",
        ["portfolio_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transactions_transaction_date"),
        "transactions",
        ["transaction_date"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transactions_transaction_date"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_portfolio_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_id"), table_name="transactions")
    op.drop_table("transactions")
    op.drop_index(op.f("ix_reports_user_id"), table_name="reports")
    op.drop_index(op.f("ix_reports_portfolio_id"), table_name="reports")
    op.drop_index(op.f("ix_reports_id"), table_name="reports")
    op.drop_table("reports")
    op.drop_index(op.f("ix_holdings_symbol"), table_name="holdings")
    op.drop_index(op.f("ix_holdings_portfolio_id"), table_name="holdings")
    op.drop_index(op.f("ix_holdings_id"), table_name="holdings")
    op.drop_table("holdings")
    op.drop_index(op.f("ix_goal_contributions_id"), table_name="goal_contributions")
    op.drop_index(
        op.f("ix_goal_contributions_goal_id"), table_name="goal_contributions"
    )
    op.drop_table("goal_contributions")
    op.drop_index(op.f("ix_portfolios_user_id"), table_name="portfolios")
    op.drop_index(op.f("ix_portfolios_id"), table_name="portfolios")
    op.drop_table("portfolios")
    op.drop_index(op.f("ix_financial_goals_user_id"), table_name="financial_goals")
    op.drop_index(op.f("ix_financial_goals_id"), table_name="financial_goals")
    op.drop_table("financial_goals")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_market_data_symbol"), table_name="market_data")
    op.drop_table("market_data")
    # ### end Alembic commands ###
