[tool.poetry]
name = "financial-adviser-backend"
version = "0.1.0"
description = "Backend API for Financial Adviser Local Application"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
aiohttp = "^3.9.1"
cryptography = "^41.0.7"
slowapi = "^0.1.9"
python-multipart = "^0.0.6"
email-validator = "^2.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
httpx = "^0.25.2"
pytest-xdist = "^3.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.ruff]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]  # Line too long (handled by black)
line-length = 88

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
pythonpath = ["."]
python_files = ["test_*.py"]
# Optimized for speed and performance
addopts = [
    "--tb=short",           # Short traceback format for faster output
    "-v",                   # Verbose output
    "--strict-markers",     # Require markers to be defined
    "--strict-config",      # Treat warnings as errors in config
    "--disable-warnings",   # Disable warnings for faster execution
    "--no-cov",            # Disable coverage by default for speed
    "--maxfail=5",         # Stop after 5 failures for faster feedback
    "--durations=10",      # Show slowest 10 tests
]
# Parallel execution settings
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
# Test discovery optimization
minversion = "7.0"
# Filter warnings for cleaner output
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]